FROM alpine:3.18

# Install required packages
RUN apk add --no-cache \
    curl \
    bash \
    dcron \
    docker-cli \
    docker-compose

# Create app directory
WORKDIR /app

# Copy the update script
COPY update-db.sh /app/update-db.sh
RUN chmod +x /app/update-db.sh

# Create a Docker-aware update script
COPY <<EOF /app/docker-update-db.sh
#!/bin/bash
set -e

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "Starting weekly database update"

# Download new database to temporary location
DB_URL="https://github.com/P3TERX/GeoLite.mmdb/raw/download/GeoLite2-City.mmdb"
TEMP_FILE="/app/data/GeoLite2-City.mmdb.tmp"
DB_FILE="/app/data/GeoLite2-City.mmdb"

# Create data directory if it doesn't exist
mkdir -p /app/data

# Download with curl
if curl -sL -o "\$TEMP_FILE" "\$DB_URL"; then
    # Verify download
    if [ ! -s "\$TEMP_FILE" ]; then
        log "Error: Downloaded file is empty"
        rm -f "\$TEMP_FILE"
        exit 1
    fi
    
    file_size=\$(stat -c%s "\$TEMP_FILE" 2>/dev/null || echo "0")
    if [ "\$file_size" -lt 10485760 ]; then  # Less than 10MB is suspicious
        log "Error: Downloaded file too small (\$(( file_size / 1024 / 1024 )) MB)"
        rm -f "\$TEMP_FILE"
        exit 1
    fi
    
    # Replace old database
    mv "\$TEMP_FILE" "\$DB_FILE"
    chmod 644 "\$DB_FILE"
    log "Database updated successfully (\$(( file_size / 1024 / 1024 )) MB)"
    
    # Restart the main service
    if docker-compose -f /app/docker-compose.yml restart ip-resolve; then
        log "Service restarted successfully"
    else
        log "Warning: Failed to restart service"
    fi
else
    log "Error: Failed to download database"
    rm -f "\$TEMP_FILE"
    exit 1
fi

log "Weekly update completed"
EOF

RUN chmod +x /app/docker-update-db.sh

# Create crontab file
RUN echo "0 2 * * 2 /app/docker-update-db.sh >> /app/data/cron-update.log 2>&1" > /etc/crontabs/root

# Create startup script
COPY <<EOF /app/start-cron.sh
#!/bin/bash
echo "Starting cron service for database updates"
echo "Cron job: Weekly updates on Tuesdays at 2 AM UTC"
echo "Logs will be written to /app/data/cron-update.log"

# Start crond in foreground
exec crond -f -l 2
EOF

RUN chmod +x /app/start-cron.sh

CMD ["/app/start-cron.sh"]